{"version":3,"sources":["utils/create-reducer.js","utils/create-type.js","modules/accounts/types.js","modules/accounts/reducers.js","modules/rates/types.js","modules/rates/reducers.js","api/rates.js","modules/rates/actions.js","modules/rates/selectors.js","modules/rates/index.js","modules/accounts/actions.js","api/accounts.js","modules/accounts/index.js","config/store.js","components/AcccountSelector/styles.js","components/AcccountSelector/account.js","utils/use-click-outside.js","components/Dropdown/styles.js","components/Dropdown/index.js","components/AcccountSelector/index.js","components/Button/styled.js","components/Button/index.js","components/Input/styled.js","components/Input/index.js","utils/get-symbol-after-dot.js","utils/use-previous.js","pages/main/styled.js","pages/main/amounts.js","pages/main/rate.js","pages/main/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","reducerMap","state","action","reducer","type","prefix","FETCH_ACCOUNTS","createType","FETCH_ACCOUNTS_SUCCESS","FETCH_ACCOUNTS_FAIL","EXCHANGE","accountReducer","createReducer","isLoading","hasError","list","payload","data","fromAccountId","toAccountId","amount","rate","getAccountById","id","find","i","from","to","nextList","filter","includes","push","FETCH_LATEST_RATES","FETCH_LATEST_RATES_SUCCESS","FETCH_LATEST_RATES_FAIL","ratesReducers","timestamp","base","rates","BASE_URL","APP_ID","a","fetch","response","ok","Promise","reject","isSuccessful","json","fetchLastRates","dispatch","getLatestRates","then","mockRates","Date","now","USD","Math","random","toFixed","GBP","EUR","RUB","resolve","getCurrentRate","fromCurrency","toCurrency","reducers","fetchAccounts","symbol","ticker","exchange","getState","accounts","ratesSelectors","logger","createLogger","collapsed","commonWrapper","css","Wrapper","styled","div","AccountWrapper","props","isActive","SelectAccount","Info","Controls","Trifle","span","Account","currency","total","Intl","NumberFormat","style","format","split","trifle","data-testid","defaultProps","useClickOutside","containerRefs","handler","when","listener","useCallback","e","node","target","document","querySelector","contains","matchNodes","map","r","current","parentNode","useEffect","addEventListener","removeEventListener","DropdownContainer","width","Divider","Dropdown","visible","options","onSelect","onClose","renderKey","renderItem","selectorRef","useState","isVisible","setVisible","setWidth","containerRef","useRef","getBoundingClientRect","window","keyCode","useMemo","length","DropdownOptions","o","idx","key","onClick","ref","AccountsSelector","activeAccountId","onChange","activeAccount","setActiveAccount","isDropdownVisible","setDropdownVisible","account","item","selectedAccount","StyledButton","Button","children","disabled","Placeholder","small","StyledInput","input","Input","value","placeholder","onFocus","onBlur","inputValue","setInputValue","isFocused","setFocused","inputRef","focus","className","rawValue","Number","isNaN","getSymbolsAfterDot","number","parts","String","usePrevious","AccountsWrapper","Title","GoArrowBoth","AmountsWrapper","RateWrapper","RateHint","ButtonWrapper","Hello","AmountsContainer","connect","ownProps","giveAmount","setGiveAmount","getAmount","setGetAmount","isGetInputFocused","setInputFocused","prevFromCurrency","prevToCurrency","fromAmount","toAmount","CurrentRate","Main","setFromAccountId","setToAccountId","fromAccount","setFromAccount","toAccount","setToAccount","setFromAmount","isBtnDisabled","selectedAccountId","accountsActions","ratesActions","interval","setInterval","clearInterval","Boolean","location","hostname","match","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4836c999.chunk.js","sourcesContent":["export default initialState => reducerMap => (state = initialState, action) => {\n  const reducer = reducerMap[action.type];\n  return reducer ? reducer(state, action) : state;\n};\n","export default (prefix, type) => `${prefix}/${type}`;\n","import { createType } from 'utils';\n\nconst prefix = 'accounts';\n\nexport const FETCH_ACCOUNTS = createType(prefix, 'FETCH_ACCOUNTS');\nexport const FETCH_ACCOUNTS_SUCCESS = createType(\n  prefix,\n  'FETCH_ACCOUNTS_SUCCESS',\n);\nexport const FETCH_ACCOUNTS_FAIL = createType(prefix, 'FETCH_ACCOUNTS_FAIL');\n\nexport const EXCHANGE = createType(prefix, 'EXCHANGE');\n","import { createReducer } from 'utils';\nimport {\n  FETCH_ACCOUNTS,\n  FETCH_ACCOUNTS_SUCCESS,\n  FETCH_ACCOUNTS_FAIL,\n  EXCHANGE,\n} from './types';\n\nconst initialState = {\n  isLoading: false,\n  hasError: false,\n  list: [],\n};\n\nconst accountReducer = createReducer(initialState)({\n  [FETCH_ACCOUNTS]: state => {\n    return {\n      ...state,\n      isLoading: true,\n    };\n  },\n  [FETCH_ACCOUNTS_SUCCESS]: (state, { payload: { data } }) => {\n    return {\n      isLoading: false,\n      hasError: false,\n      list: data,\n    };\n  },\n  [FETCH_ACCOUNTS_FAIL]: state => ({\n    ...state,\n    isLoading: false,\n    hasError: true,\n  }),\n  [EXCHANGE]: (\n    state,\n    { payload: { fromAccountId, toAccountId, amount, rate } },\n  ) => {\n    const getAccountById = id => state.list.find(i => i.id === id);\n\n    const from = getAccountById(fromAccountId);\n    const to = getAccountById(toAccountId);\n\n    const nextList = state.list.filter(i =>\n      [fromAccountId, toAccountId].includes(i.id),\n    );\n\n    from.amount = from.amount - amount;\n    to.amount = to.amount + amount * rate;\n\n    nextList.push(from);\n    nextList.push(to);\n\n    return {\n      ...state,\n      list: nextList,\n    };\n  },\n});\n\nexport default accountReducer;\n","import { createType } from 'utils';\n\nconst prefix = 'rates';\n\nexport const FETCH_LATEST_RATES = createType(prefix, 'FETCH_LATEST_RATES');\nexport const FETCH_LATEST_RATES_SUCCESS = createType(\n  prefix,\n  'FETCH_LATEST_RATES_SUCCESS',\n);\nexport const FETCH_LATEST_RATES_FAIL = createType(\n  prefix,\n  'FETCH_LATEST_RATES_FAIL',\n);\n","import { createReducer } from 'utils';\nimport {\n  FETCH_LATEST_RATES,\n  FETCH_LATEST_RATES_SUCCESS,\n  FETCH_LATEST_RATES_FAIL,\n} from './types';\n\nconst initialState = {\n  isLoading: false,\n  hasError: false,\n  timestamp: null,\n  base: null,\n  rates: [],\n};\n\nconst ratesReducers = createReducer(initialState)({\n  [FETCH_LATEST_RATES]: state => ({\n    ...state,\n    isLoading: true,\n  }),\n  [FETCH_LATEST_RATES_SUCCESS]: (state, { payload }) => {\n    if (state.timestamp > payload.data.timestamp) {\n      return state;\n    }\n\n    return {\n      ...state,\n      isLoading: false,\n      rates: payload.data.rates,\n      timestamp: payload.data.timestamp,\n      base: payload.data.base,\n    };\n  },\n  [FETCH_LATEST_RATES_FAIL]: state => ({\n    ...state,\n    isLoading: false,\n    hasError: true,\n  }),\n});\n\nexport default ratesReducers;\n","const BASE_URL = 'https://openexchangerates.org/api/';\nconst APP_ID = 'e6f74380a0d1469db8eb2c26f11b5509';\n\nexport async function getLatestRates() {\n  const response = await fetch(`${BASE_URL}latest.json?app_id=${APP_ID}`);\n\n  if (!response.ok) {\n    return Promise.reject({\n      isSuccessful: false,\n    });\n  }\n\n  return {\n    isSuccessful: true,\n    data: await response.json(),\n  };\n}\n","import { getLatestRates } from 'api/rates';\nimport {\n  FETCH_LATEST_RATES,\n  FETCH_LATEST_RATES_SUCCESS,\n  FETCH_LATEST_RATES_FAIL,\n} from './types';\n\nexport const fetchLastRates = () => dispatch => {\n  dispatch({ type: FETCH_LATEST_RATES });\n\n  return getLatestRates().then(\n    data => {\n      dispatch({ type: FETCH_LATEST_RATES_SUCCESS, payload: data });\n    },\n    () => {\n      dispatch({ type: FETCH_LATEST_RATES_FAIL });\n    },\n  );\n};\n\nexport const mockRates = () => dispatch => {\n  dispatch({ type: FETCH_LATEST_RATES });\n\n  const data = {\n    base: 'USD',\n    timestamp: Date.now(),\n    rates: {\n      USD: (Math.random() * 10).toFixed(2),\n      GBP: (Math.random() * 10).toFixed(2),\n      EUR: (Math.random() * 10).toFixed(2),\n      RUB: (Math.random() * 10).toFixed(2),\n    },\n  };\n\n  return Promise.resolve({ data }).then(data => {\n    dispatch({ type: FETCH_LATEST_RATES_SUCCESS, payload: data });\n  });\n};\n","export const getCurrentRate = state => (fromCurrency, toCurrency) => {\n  const { rates } = state.rates;\n  let rate;\n\n  if (!fromCurrency || !toCurrency)\n    return {\n      rate: null,\n    };\n\n  if (fromCurrency === 'USD') {\n    rate = rates[toCurrency];\n  } else {\n    rate = rates[toCurrency] / rates[fromCurrency];\n  }\n\n  return {\n    rate,\n  };\n};\n","import reducers from './reducers';\nimport * as ratesActions from './actions';\nimport * as ratesSelectors from './selectors';\n\nexport { ratesActions, ratesSelectors };\n\nexport default reducers;\n","import { getAccounts } from 'api/accounts';\nimport {\n  FETCH_ACCOUNTS,\n  FETCH_ACCOUNTS_SUCCESS,\n  FETCH_ACCOUNTS_FAIL,\n  EXCHANGE,\n} from './types';\nimport { ratesSelectors } from 'modules/rates';\n\nexport const fetchAccounts = () => dispatch => {\n  dispatch({\n    type: FETCH_ACCOUNTS,\n  });\n\n  return getAccounts().then(\n    data => {\n      dispatch({ type: FETCH_ACCOUNTS_SUCCESS, payload: data });\n    },\n    () => {\n      dispatch({ type: FETCH_ACCOUNTS_FAIL });\n    },\n  );\n};\n\nexport const exchange = ({ fromAccountId, toAccountId, amount }) => (\n  dispatch,\n  getState,\n) => {\n  const { accounts, rates } = getState();\n\n  if (accounts && accounts.list) {\n    const getAccountById = id => accounts.list.find(i => i.id === id);\n\n    const from = getAccountById(fromAccountId);\n    const to = getAccountById(toAccountId);\n\n    const { rate } = ratesSelectors.getCurrentRate({ rates })(\n      from.ticker,\n      to.ticker,\n    );\n\n    if (from.amount >= amount) {\n      dispatch({\n        type: EXCHANGE,\n        payload: {\n          fromAccountId,\n          toAccountId,\n          amount,\n          rate,\n        },\n      });\n    }\n  }\n};\n","export function getAccounts() {\n  return Promise.resolve({\n    isSuccessful: true,\n    data: [\n      {\n        id: 1,\n        symbol: '$',\n        ticker: 'USD',\n        amount: 1034.23,\n      },\n      {\n        id: 2,\n        symbol: '£',\n        ticker: 'GBP',\n        amount: 420.98,\n      },\n      {\n        id: 3,\n        symbol: '€',\n        ticker: 'EUR',\n        amount: 276.01,\n      },\n      {\n        id: 4,\n        symbol: '₽',\n        ticker: 'RUB',\n        amount: 41089,\n      },\n    ],\n  });\n}\n","import reducers from './reducers';\nimport * as accountsActions from './actions';\n\nexport { accountsActions };\n\nexport default reducers;\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nimport { accounts, rates } from '../modules/index';\n\nconst logger = createLogger({\n  collapsed: true,\n});\n\nexport default () => {\n  const store = createStore(\n    combineReducers({\n      accounts,\n      rates,\n    }),\n    compose(applyMiddleware(thunk, logger)),\n  );\n\n  if (module.hot) {\n    module.hot.accept('../modules', () => {\n      const nextRootReducer = require('../modules/index');\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n};\n","import styled, { css } from 'styled-components';\n\nconst commonWrapper = css`\n  align-items: center;\n\n  height: 80px;\n\n  cursor: pointer;\n  transition: 0.2s;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  ${commonWrapper};\n\n  display: grid;\n  grid-template-columns: 1fr 48px;\n  grid-template-areas: 'account controls';\n\n  border-radius: 8px;\n  background-color: #dedede;\n`;\n\nexport const AccountWrapper = styled.div`\n  ${commonWrapper};\n\n  grid-area: account;\n  display: flex;\n\n  padding-left: 24px;\n  ${props => {\n    return props.isActive && 'background: #e6f7ff';\n  }}\n`;\n\nexport const SelectAccount = styled.div`\n  padding: 0 32px;\n`;\n\nexport const Info = styled.div`\n  font-size: 28px;\n`;\n\nexport const Controls = styled.div`\n  grid-area: controls;\n\n  display: flex;\n  justify-content: center;\n\n  font-size: 32px;\n  margin-top: 4px;\n`;\n\nexport const Trifle = styled.span`\n  opacity: 0.6;\n`;\n","import React from 'react';\nimport { string, number, bool } from 'prop-types';\nimport { AccountWrapper, Info, Trifle } from './styles';\n\nexport function Account({ currency, total, isActive }) {\n  const [amount, trifle] = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: currency,\n  })\n    .format(total)\n    .split('.');\n\n  return (\n    <AccountWrapper isActive={isActive}>\n      <Info data-testid=\"currency-value\">\n        <span>{amount}</span>\n        <Trifle>.{trifle}</Trifle>\n      </Info>\n    </AccountWrapper>\n  );\n}\n\nAccount.propTypes = {\n  isActive: bool,\n  currency: string.isRequired,\n  total: number.isRequired,\n};\n\nAccount.defaultProps = {\n  isActive: false,\n};\n","import { useCallback, useEffect } from 'react';\n\nexport const useClickOutside = ({ containerRefs, handler, when = true }) => {\n  const listener = useCallback(\n    e => {\n      let node = e.target;\n\n      if (!document.querySelector('body').contains(node)) {\n        return;\n      }\n\n      const matchNodes = containerRefs.map(r => r.current);\n\n      while (node) {\n        if (matchNodes.includes(node)) {\n          return;\n        }\n\n        node = node.parentNode;\n      }\n\n      handler();\n    },\n    [containerRefs, handler],\n  );\n\n  useEffect(() => {\n    if (when) {\n      document.addEventListener('click', listener, true);\n    }\n\n    return () => {\n      document.removeEventListener('click', listener, true);\n    };\n  }, [listener, when]);\n};\n","import styled from 'styled-components';\n\nexport const DropdownContainer = styled.div`\n  position: absolute;\n  margin-top: 2px;\n  border-radius: 8px;\n  border: 1px solid #dedede;\n  background-color: white;\n  width: ${props => `${props.width}px`};\n\n  z-index: 100;\n`;\n\nexport const Divider = styled.div`\n  width: 100%;\n  border-bottom: 1px solid #dedede;\n`;\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { useClickOutside } from 'utils/use-click-outside';\n\nimport { DropdownContainer, Divider } from './styles';\n\nexport default function Dropdown({\n  visible,\n  options,\n  onSelect,\n  onClose,\n  renderKey,\n  renderItem,\n  selectorRef,\n}) {\n  const [isVisible, setVisible] = useState(visible);\n  const [width, setWidth] = useState(0);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    setVisible(visible);\n  }, [visible]);\n\n  useEffect(() => {\n    setWidth(selectorRef.current.getBoundingClientRect().width);\n  }, [selectorRef]);\n\n  useEffect(() => {\n    const handler = () => {\n      setVisible(false);\n      onClose();\n    };\n\n    window.addEventListener('resize', handler);\n\n    return () => {\n      window.removeEventListener('resize', handler);\n    };\n  }, [onClose]);\n\n  useEffect(() => {\n    const handler = e => {\n      if (e.keyCode === 27 && isVisible) {\n        setVisible(false);\n        onClose();\n      }\n    };\n\n    if (isVisible) {\n      document.addEventListener('keydown', handler);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handler);\n    };\n  }, [isVisible, onClose]);\n\n  useClickOutside({\n    containerRefs: useMemo(() => [containerRef], []),\n    handler: () => {\n      setVisible(false);\n      onClose();\n    },\n  });\n\n  if (!isVisible || !options.length) return null;\n\n  const DropdownOptions = options.map((o, idx) => (\n    <div\n      key={o[renderKey]}\n      onClick={() => {\n        setVisible(false);\n        onSelect(o);\n        onClose();\n      }}\n    >\n      <div>\n        {renderItem(o)}\n        {idx < options.length - 1 && <Divider />}\n      </div>\n    </div>\n  ));\n\n  return (\n    <DropdownContainer width={width} data-testid=\"container\" ref={containerRef}>\n      {DropdownOptions}\n    </DropdownContainer>\n  );\n}\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { number, instanceOf, func } from 'prop-types';\nimport { MdKeyboardArrowDown } from 'react-icons/md';\n\nimport { Account } from './account';\nimport Dropdown from 'components/Dropdown';\n\nimport { Wrapper, Controls, SelectAccount } from './styles';\n\nexport function AccountsSelector({ activeAccountId, accounts, onChange }) {\n  const getAccountById = useCallback(\n    id => {\n      return accounts.find(i => i.id === id);\n    },\n    [accounts],\n  );\n  const ref = useRef();\n  const [activeAccount, setActiveAccount] = useState(() =>\n    getAccountById(activeAccountId),\n  );\n  const [isDropdownVisible, setDropdownVisible] = useState(false);\n\n  useEffect(() => {\n    const account = getAccountById(activeAccountId);\n\n    setActiveAccount(account);\n  }, [activeAccountId, accounts, getAccountById]);\n\n  return (\n    <div>\n      <Wrapper\n        ref={ref}\n        onClick={() => {\n          if (!isDropdownVisible) {\n            setDropdownVisible(!isDropdownVisible);\n          }\n        }}\n      >\n        {!activeAccount && (\n          <SelectAccount data-testid=\"placeholder\">\n            Click to select an Account\n          </SelectAccount>\n        )}\n        {activeAccount && (\n          <Account\n            currency={activeAccount.ticker}\n            total={activeAccount.amount}\n          />\n        )}\n        <Controls>\n          <MdKeyboardArrowDown />\n        </Controls>\n      </Wrapper>\n      <Dropdown\n        selectorRef={ref}\n        visible={isDropdownVisible}\n        options={accounts}\n        renderKey=\"id\"\n        renderItem={item => (\n          <Account\n            isActive={activeAccountId === item.id}\n            key={item.id}\n            currency={item.ticker}\n            total={item.amount}\n          />\n        )}\n        onSelect={selectedAccount => {\n          onChange(selectedAccount.id);\n        }}\n        onClose={() => {\n          setDropdownVisible(false);\n        }}\n      />\n    </div>\n  );\n}\n\nAccountsSelector.propTypes = {\n  activeAccountId: number,\n  accounts: instanceOf(Array).isRequired,\n  onChange: func.isRequired,\n};\n\nAccountsSelector.defaultProps = {\n  activeAccountId: null,\n};\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.div`\n  display: inline-block;\n  border-radius: 2em;\n  cursor: pointer;\n  transition: all 0.2s ease 0s;\n  padding: 0.625em 1.5em;\n  line-height: 1.5em;\n  font-size: 1rem;\n  background-color: rgb(235, 0, 141);\n\n  color: white;\n\n  &[disabled] {\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n`;\n","import React from 'react';\nimport { StyledButton } from './styled';\n\nexport function Button({ children, onClick, disabled }) {\n  return (\n    <StyledButton disabled={disabled} onClick={onClick}>\n      {children}\n    </StyledButton>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  height: 64px;\n  transition: 0.2s;\n  cursor: text;\n\n  border-radius: 8px;\n  background-color: #dedede;\n`;\n\nexport const Placeholder = styled.small`\n  position: absolute;\n  color: #9299a2;\n  margin-top: 4px;\n  margin-left: 24px;\n  transition: 0.2s;\n  font-size: 12px;\n\n  &.empty {\n    margin-top: 17px;\n    font-size: 20px;\n    width: calc(100% - 24px);\n    height: calc(100% - 17px);\n  }\n`;\n\nexport const StyledInput = styled.input`\n  height: 64px;\n  background-color: transparent;\n  border: none;\n  margin: 0 24px;\n  font-size: 20px;\n\n  &:focus {\n    border: none;\n    outline: none;\n  }\n`;\n\nexport const Error = styled.small``;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Wrapper, Placeholder, StyledInput } from './styled';\n\nexport function Input({\n  value,\n  placeholder,\n  onChange,\n  onFocus = () => {},\n  onBlur = () => {},\n}) {\n  const [inputValue, setInputValue] = useState('');\n  const [isFocused, setFocused] = useState(false);\n  const inputRef = useRef();\n\n  useEffect(() => {\n    setInputValue(value);\n  }, [value]);\n\n  return (\n    <Wrapper>\n      <Placeholder\n        data-testid=\"placeholder\"\n        onClick={() => {\n          inputRef.current.focus();\n        }}\n        className={!isFocused && inputValue === '' ? 'empty' : ''}\n      >\n        {placeholder}\n      </Placeholder>\n      <StyledInput\n        data-testid=\"input\"\n        ref={inputRef}\n        value={inputValue}\n        onChange={e => {\n          const rawValue = e.target.value;\n\n          if (rawValue === '') {\n            setInputValue(rawValue);\n            onChange(rawValue);\n            return;\n          }\n\n          if (Number.isNaN(Number(rawValue))) return;\n\n          setInputValue(rawValue);\n          onChange(rawValue);\n        }}\n        onFocus={() => {\n          onFocus();\n          setFocused(true);\n        }}\n        onBlur={() => {\n          onBlur();\n          setFocused(false);\n        }}\n      />\n    </Wrapper>\n  );\n}\n","export const getSymbolsAfterDot = number => {\n  const parts = String(number).split('.')[1];\n\n  return parts ? parts.length : 0;\n};\n","import { useEffect, useRef } from 'react';\n\nexport function usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","import styled from 'styled-components';\nimport { GoArrowBoth } from 'react-icons/go';\n\nexport const AccountsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 40px 1fr;\n  grid-column-gap: 8px;\n  grid-row-gap: 8px;\n`;\n\nexport const Title = styled.div`\n  margin-left: 8px;\n`;\n\nexport const Controls = styled(GoArrowBoth)`\n  display: flex;\n  align-self: center;\n  justify-self: center;\n\n  cursor: pointer;\n`;\n\nexport const AmountsWrapper = styled.div`\n  display: grid;\n\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 56px;\n  grid-row-gap: 8px;\n\n  margin-top: 40px;\n`;\n\nexport const RateWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-top: 28px;\n`;\n\nexport const RateHint = styled.small`\n  color: #9299a2;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin-top: 40px;\n`;\n\nexport const Hello = styled.div`\n  margin: 28px 0 48px 0;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n\n  font-size: 40px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { ratesSelectors } from 'modules/rates';\nimport { Input } from 'components/Input';\nimport { getSymbolsAfterDot } from 'utils/get-symbol-after-dot';\nimport { usePrevious } from 'utils/use-previous';\n\nimport { AmountsWrapper, Title } from './styled';\n\nexport function Amounts({ fromCurrency, toCurrency, rate, onChange }) {\n  const [giveAmount, setGiveAmount] = useState('');\n  const [getAmount, setGetAmount] = useState('');\n\n  const [isGetInputFocused, setInputFocused] = useState(false);\n\n  const prevFromCurrency = usePrevious(fromCurrency);\n  const prevToCurrency = usePrevious(toCurrency);\n\n  useEffect(() => {\n    if (fromCurrency && rate && !isGetInputFocused) {\n      let value = giveAmount * rate;\n\n      if (getSymbolsAfterDot(value) >= 2) {\n        value = value.toFixed(2);\n      }\n\n      setGetAmount(value);\n    } else if (rate) {\n      let value = getAmount / rate;\n\n      if (getSymbolsAfterDot(value) >= 2) {\n        value = value.toFixed(2);\n      }\n\n      setGiveAmount(value);\n    }\n  }, [\n    getAmount,\n    fromCurrency,\n    toCurrency,\n    rate,\n    giveAmount,\n    setGetAmount,\n    isGetInputFocused,\n  ]);\n\n  useEffect(() => {\n    if (giveAmount && getAmount) {\n      onChange({ fromAmount: giveAmount, toAmount: getAmount });\n    }\n  }, [getAmount, giveAmount, onChange]);\n  /**\n   * toggle счетов usd/gbp -> gbp/usd\n   */\n  useEffect(() => {\n    if (\n      fromCurrency &&\n      toCurrency &&\n      fromCurrency === prevToCurrency &&\n      toCurrency === prevFromCurrency\n    ) {\n      setGiveAmount(getAmount);\n      setGetAmount(giveAmount);\n    }\n  }, [\n    fromCurrency,\n    prevFromCurrency,\n    toCurrency,\n    prevToCurrency,\n    getAmount,\n    setGetAmount,\n    giveAmount,\n    setGiveAmount,\n  ]);\n\n  /**\n   * Сбросить все инпуты, когда пользователь пытается выбрать одинаковые валюты.\n   */\n  useEffect(() => {\n    if (\n      (!fromCurrency && prevFromCurrency) ||\n      (!toCurrency && prevToCurrency)\n    ) {\n      setGiveAmount('');\n      setGetAmount('');\n    }\n  }, [fromCurrency, prevFromCurrency, toCurrency, prevToCurrency]);\n\n  return (\n    <AmountsWrapper data-testid=\"amounts-wrapper\">\n      <Title>You give:</Title>\n      <Title>You'll get:</Title>\n      <Input\n        placeholder={`Enter amount ${fromCurrency || ''}`}\n        value={giveAmount}\n        onChange={e => {\n          setGiveAmount(e);\n          if (rate) {\n            let value = e * rate;\n\n            if (getSymbolsAfterDot(value) >= 2) {\n              value = value.toFixed(2);\n            }\n\n            setGetAmount(value);\n          } else {\n            setGetAmount('');\n          }\n        }}\n      />\n\n      <Input\n        placeholder={`Enter amount ${toCurrency || ''}`}\n        value={getAmount}\n        onChange={e => {\n          setGetAmount(e);\n          if (rate) {\n            let value = e / rate;\n\n            if (getSymbolsAfterDot(value) >= 2) {\n              value = value.toFixed(2);\n            }\n\n            setGiveAmount(value);\n          } else {\n            setGiveAmount('');\n          }\n        }}\n        onFocus={() => {\n          setInputFocused(true);\n        }}\n        onBlur={() => {\n          setInputFocused(false);\n        }}\n      />\n    </AmountsWrapper>\n  );\n}\n\nexport const AmountsContainer = connect((state, ownProps) => {\n  return ratesSelectors.getCurrentRate(state)(\n    ownProps.fromCurrency,\n    ownProps.toCurrency,\n  );\n})(Amounts);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { ratesSelectors } from 'modules/rates';\n\nimport { RateWrapper, RateHint } from './styled';\n\nfunction Rate({ fromCurrency, toCurrency, rate }) {\n  if (!fromCurrency || !toCurrency) return null;\n\n  return (\n    <RateWrapper>\n      <div>\n        Current rate for {fromCurrency}/{toCurrency}\n      </div>\n      <div>{Number(rate).toFixed(2)}</div>\n      <RateHint>Updates every 10 seconds</RateHint>\n    </RateWrapper>\n  );\n}\n\nexport const CurrentRate = connect((state, ownProps) => {\n  return ratesSelectors.getCurrentRate(state)(\n    ownProps.fromCurrency,\n    ownProps.toCurrency,\n  );\n})(Rate);\n","import React, { useEffect, useState } from 'react';\n\nimport { AccountsSelector } from 'components/AcccountSelector';\nimport { Button } from 'components/Button';\n\nimport { AmountsContainer } from './amounts';\nimport { CurrentRate } from './rate';\nimport {\n  AccountsWrapper,\n  Title,\n  Controls,\n  ButtonWrapper,\n  Hello,\n} from './styled';\n\nexport function Main({ accounts, exchange }) {\n  const [fromAccountId, setFromAccountId] = useState();\n  const [toAccountId, setToAccountId] = useState();\n\n  const [fromAccount, setFromAccount] = useState();\n  const [toAccount, setToAccount] = useState();\n\n  const [fromAmount, setFromAmount] = useState();\n\n  useEffect(() => {\n    const getAccountById = id => accounts.find(i => i.id === id);\n\n    const from = getAccountById(fromAccountId);\n    const to = getAccountById(toAccountId);\n\n    setFromAccount(from);\n    setToAccount(to);\n  }, [fromAccountId, toAccountId, accounts]);\n\n  const isBtnDisabled =\n    !fromAccount || !toAccount || fromAccount.amount < fromAmount;\n\n  return (\n    <div>\n      <Hello>🏦 Exchange Widget 🏦</Hello>\n      <AccountsWrapper>\n        <Title>From</Title>\n        <Title />\n        <Title>To</Title>\n\n        <AccountsSelector\n          activeAccountId={fromAccountId}\n          accounts={accounts}\n          onChange={selectedAccountId => {\n            if (toAccountId === selectedAccountId) {\n              setToAccountId();\n            }\n\n            setFromAccountId(selectedAccountId);\n          }}\n        />\n\n        <Controls\n          onClick={() => {\n            if (fromAccountId || toAccountId) {\n              setToAccountId(fromAccountId);\n              setFromAccountId(toAccountId);\n            }\n          }}\n        />\n\n        <AccountsSelector\n          activeAccountId={toAccountId}\n          accounts={accounts}\n          onChange={selectedAccountId => {\n            if (fromAccountId === selectedAccountId) {\n              setFromAccountId();\n            }\n\n            setToAccountId(selectedAccountId);\n          }}\n        />\n      </AccountsWrapper>\n\n      <AmountsContainer\n        fromCurrency={fromAccount && fromAccount.ticker}\n        toCurrency={toAccount && toAccount.ticker}\n        onChange={({ fromAmount }) => {\n          setFromAmount(fromAmount);\n        }}\n      />\n\n      <CurrentRate\n        fromCurrency={fromAccount && fromAccount.ticker}\n        toCurrency={toAccount && toAccount.ticker}\n      />\n\n      <ButtonWrapper>\n        <Button\n          disabled={isBtnDisabled}\n          onClick={() => {\n            exchange({\n              fromAccountId,\n              toAccountId,\n              amount: fromAmount,\n            });\n          }}\n        >\n          Exchange\n        </Button>\n      </ButtonWrapper>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { Main } from 'pages/main';\n\nimport { accountsActions } from 'modules/accounts';\nimport { ratesActions } from 'modules/rates';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n\n  background-color: rgba(var(--b3f, 250, 250, 250), 1);\n\n  padding: 60px;\n  & > * {\n    width: 800px;\n  }\n`;\n\nfunction App({\n  isLoading,\n  accounts,\n  rates,\n  fetchAccounts,\n  fetchLastRates,\n  mockRates,\n  exchange,\n}) {\n  useEffect(() => {\n    fetchAccounts();\n  }, [fetchAccounts, mockRates]);\n\n  useEffect(() => {\n    fetchLastRates();\n\n    const interval = setInterval(() => {\n      fetchLastRates();\n    }, 10 * 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [fetchLastRates]);\n\n  if (isLoading) return null;\n\n  return (\n    <Wrapper>\n      <Main accounts={accounts} rates={rates} exchange={exchange} />\n    </Wrapper>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.accounts.list,\n    rates: state.rates.rates,\n    isLoading: state.accounts.isLoading,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...accountsActions, ...ratesActions },\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from 'config/store';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}